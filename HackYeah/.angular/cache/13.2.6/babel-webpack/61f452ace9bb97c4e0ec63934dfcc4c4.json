{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/test.service\";\nimport * as i3 from \"../header/header.component\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/common\";\n\nfunction DashboardComponent_mat_grid_tile_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const tile_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background\", tile_r1.color);\n    i0.ɵɵproperty(\"colspan\", tile_r1.cols)(\"rowspan\", tile_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tile_r1.text, \" \");\n  }\n}\n\nexport class DashboardComponent {\n  constructor(authService, testService) {\n    this.authService = authService;\n    this.testService = testService;\n    this.testRequest$ = this.testService.sendTestRequest();\n    this.tiles = [{\n      text: 'One',\n      cols: 2,\n      rows: 3,\n      color: 'lightblue'\n    }, {\n      text: 'Two',\n      cols: 1,\n      rows: 2,\n      color: 'lightgreen'\n    }, {\n      text: 'Three',\n      cols: 1,\n      rows: 1,\n      color: 'lightpink'\n    }];\n  }\n\n  ngOnInit() {}\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TestService));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 6,\n  vars: 4,\n  consts: [[\"cols\", \"4\"], [3, \"colspan\", \"rowspan\", \"background\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-header\")(1, \"mat-card\");\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-grid-list\", 0);\n      i0.ɵɵtemplate(5, DashboardComponent_mat_grid_tile_5_Template, 2, 5, \"mat-grid-tile\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, ctx.testRequest$));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tiles);\n    }\n  },\n  directives: [i3.HeaderComponent, i4.MatCard, i5.MatGridList, i6.NgForOf, i5.MatGridTile],\n  pipes: [i6.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:/Users/kamil/source/repos/Nowy folder/HackYeahFront/HackYeah/src/app/dashboard/dashboard.component.ts"],"names":["i0","i1","i2","i3","i4","i5","i6","DashboardComponent_mat_grid_tile_5_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","tile_r1","$implicit","ɵɵstyleProp","color","ɵɵproperty","cols","rows","ɵɵadvance","ɵɵtextInterpolate1","text","DashboardComponent","constructor","authService","testService","testRequest$","sendTestRequest","tiles","ngOnInit","logout","ɵfac","DashboardComponent_Factory","t","ɵɵdirectiveInject","AuthService","TestService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","DashboardComponent_Template","ɵɵpipe","ɵɵtemplate","ɵɵtextInterpolate","ɵɵpipeBind1","directives","HeaderComponent","MatCard","MatGridList","NgForOf","MatGridTile","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../services/auth.service\";\r\nimport * as i2 from \"../services/test.service\";\r\nimport * as i3 from \"../header/header.component\";\r\nimport * as i4 from \"@angular/material/card\";\r\nimport * as i5 from \"@angular/material/grid-list\";\r\nimport * as i6 from \"@angular/common\";\r\nfunction DashboardComponent_mat_grid_tile_5_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 2);\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const tile_r1 = ctx.$implicit;\r\n    i0.ɵɵstyleProp(\"background\", tile_r1.color);\r\n    i0.ɵɵproperty(\"colspan\", tile_r1.cols)(\"rowspan\", tile_r1.rows);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate1(\" \", tile_r1.text, \" \");\r\n} }\r\nexport class DashboardComponent {\r\n    constructor(authService, testService) {\r\n        this.authService = authService;\r\n        this.testService = testService;\r\n        this.testRequest$ = this.testService.sendTestRequest();\r\n        this.tiles = [\r\n            { text: 'One', cols: 2, rows: 3, color: 'lightblue' },\r\n            { text: 'Two', cols: 1, rows: 2, color: 'lightgreen' },\r\n            { text: 'Three', cols: 1, rows: 1, color: 'lightpink' },\r\n        ];\r\n    }\r\n    ngOnInit() { }\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n}\r\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TestService)); };\r\nDashboardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [[\"app-dashboard\"]], decls: 6, vars: 4, consts: [[\"cols\", \"4\"], [3, \"colspan\", \"rowspan\", \"background\", 4, \"ngFor\", \"ngForOf\"], [3, \"colspan\", \"rowspan\"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"app-header\")(1, \"mat-card\");\r\n        i0.ɵɵtext(2);\r\n        i0.ɵɵpipe(3, \"async\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(4, \"mat-grid-list\", 0);\r\n        i0.ɵɵtemplate(5, DashboardComponent_mat_grid_tile_5_Template, 2, 5, \"mat-grid-tile\", 1);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 2, ctx.testRequest$));\r\n        i0.ɵɵadvance(3);\r\n        i0.ɵɵproperty(\"ngForOf\", ctx.tiles);\r\n    } }, directives: [i3.HeaderComponent, i4.MatCard, i5.MatGridList, i6.NgForOf, i5.MatGridTile], pipes: [i6.AsyncPipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}