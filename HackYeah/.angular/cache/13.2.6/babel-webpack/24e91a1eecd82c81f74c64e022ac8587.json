{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nimport * as i2 from \"../services/test.service\";\nimport * as i3 from \"../header/header.component\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/grid-list\";\nimport * as i6 from \"@angular/common\";\nexport class DashboardComponent {\n  constructor(authService, testService) {\n    this.authService = authService;\n    this.testService = testService;\n    this.testRequest$ = this.testService.sendTestRequest();\n    this.tiles = [{\n      text: 'One',\n      cols: 2,\n      rows: 2,\n      color: 'lightblue'\n    }, {\n      text: 'Two',\n      cols: 2,\n      rows: 1,\n      color: 'lightgreen'\n    }, {\n      text: 'Three',\n      cols: 2,\n      rows: 1,\n      color: 'lightpink'\n    }];\n  }\n\n  ngOnInit() {}\n\n  logout() {\n    this.authService.logout();\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TestService));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[\"cols\", \"4\"], [\"colspan\", \"2\", \"rowspan\", \"2\"], [\"colspan\", \"2\", \"rowspan\", \"1\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-header\")(1, \"mat-card\");\n      i0.ɵɵtext(2);\n      i0.ɵɵpipe(3, \"async\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"mat-grid-list\", 0)(5, \"mat-grid-tile\", 1);\n      i0.ɵɵtext(6, \"TEST \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"mat-grid-tile\", 2)(8, \"mat-grid-tile\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx.testRequest$));\n    }\n  },\n  directives: [i3.HeaderComponent, i4.MatCard, i5.MatGridList, i5.MatGridTile],\n  pipes: [i6.AsyncPipe],\n  styles: [\"mat-grid-tile[_ngcontent-%COMP%] {\\r\\n  background: lightblue;\\r\\n  border-radius: 15px;\\r\\n  margin: 1vw 1vw 1vw 0vw;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekIiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZ3JpZC10aWxlIHtcclxuICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBtYXJnaW46IDF2dyAxdncgMXZ3IDB2dztcclxufVxyXG4iXX0= */\"]\n});","map":{"version":3,"sources":["C:/Users/kamil/source/repos/Nowy folder/HackYeahFront/HackYeah/src/app/dashboard/dashboard.component.ts"],"names":["i0","i1","i2","i3","i4","i5","i6","DashboardComponent","constructor","authService","testService","testRequest$","sendTestRequest","tiles","text","cols","rows","color","ngOnInit","logout","ɵfac","DashboardComponent_Factory","t","ɵɵdirectiveInject","AuthService","TestService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵpipe","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind1","directives","HeaderComponent","MatCard","MatGridList","MatGridTile","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../services/auth.service\";\r\nimport * as i2 from \"../services/test.service\";\r\nimport * as i3 from \"../header/header.component\";\r\nimport * as i4 from \"@angular/material/card\";\r\nimport * as i5 from \"@angular/material/grid-list\";\r\nimport * as i6 from \"@angular/common\";\r\nexport class DashboardComponent {\r\n    constructor(authService, testService) {\r\n        this.authService = authService;\r\n        this.testService = testService;\r\n        this.testRequest$ = this.testService.sendTestRequest();\r\n        this.tiles = [\r\n            { text: 'One', cols: 2, rows: 2, color: 'lightblue' },\r\n            { text: 'Two', cols: 2, rows: 1, color: 'lightgreen' },\r\n            { text: 'Three', cols: 2, rows: 1, color: 'lightpink' },\r\n        ];\r\n    }\r\n    ngOnInit() { }\r\n    logout() {\r\n        this.authService.logout();\r\n    }\r\n}\r\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) { return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.TestService)); };\r\nDashboardComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: DashboardComponent, selectors: [[\"app-dashboard\"]], decls: 9, vars: 3, consts: [[\"cols\", \"4\"], [\"colspan\", \"2\", \"rowspan\", \"2\"], [\"colspan\", \"2\", \"rowspan\", \"1\"]], template: function DashboardComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"app-header\")(1, \"mat-card\");\r\n        i0.ɵɵtext(2);\r\n        i0.ɵɵpipe(3, \"async\");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵelementStart(4, \"mat-grid-list\", 0)(5, \"mat-grid-tile\", 1);\r\n        i0.ɵɵtext(6, \"TEST \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelement(7, \"mat-grid-tile\", 2)(8, \"mat-grid-tile\", 2);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 1, ctx.testRequest$));\r\n    } }, directives: [i3.HeaderComponent, i4.MatCard, i5.MatGridList, i5.MatGridTile], pipes: [i6.AsyncPipe], styles: [\"mat-grid-tile[_ngcontent-%COMP%] {\\r\\n  background: lightblue;\\r\\n  border-radius: 15px;\\r\\n  margin: 1vw 1vw 1vw 0vw;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekIiLCJmaWxlIjoiZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZ3JpZC10aWxlIHtcclxuICBiYWNrZ3JvdW5kOiBsaWdodGJsdWU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBtYXJnaW46IDF2dyAxdncgMXZ3IDB2dztcclxufVxyXG4iXX0= */\"] });\r\n"]},"metadata":{},"sourceType":"module"}